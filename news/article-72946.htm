<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freequantumultxnode.github.io/news/article-72946.htm" />
    <meta charset="utf-8">
    <title>nodejs从异步事件中获取数据方法</title>
        <meta name="description" content="nodejs对异步的实现非常彻底，接触时间不久，写爬虫的时候按照以往的思路将request的结果直接赋值给全局变量，结果发现没有输出，对此很困惑，经过查询发现如下 看下面的片段，输出为空 fs.rea" />
        <link rel="icon" href="/assets/website/img/freequantumultxnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free QuantumultX Node(圈X)免费机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freequantumultxnode.github.io/news/article-72946.htm" />
    <meta property="og:site_name" content="Free QuantumultX Node(圈X)免费机场节点订阅官网" />
    <meta property="og:title" content="nodejs从异步事件中获取数据方法" />
    <meta property="og:image" content="https://freequantumultxnode.github.io/uploads/20240913-1/7dd8b904c8a5e30f919a39eb06acc13f.webp" />
        <meta property="og:release_date" content="2025-03-13T09:22:06" />
    <meta property="og:updated_time" content="2025-03-13T09:22:06" />
        <meta property="og:description" content="nodejs对异步的实现非常彻底，接触时间不久，写爬虫的时候按照以往的思路将request的结果直接赋值给全局变量，结果发现没有输出，对此很困惑，经过查询发现如下 看下面的片段，输出为空 fs.rea" />
        
    <!-- Stylesheets -->
    <link href="/assets/website/css/freequantumultxnode/bootstrap.css" rel="stylesheet">
    <link href="/assets/website/css/freequantumultxnode/style.css" rel="stylesheet">
    <!-- Responsive File -->
    <link href="/assets/website/css/freequantumultxnode/responsive.css" rel="stylesheet">
    <!-- Color File -->
    <link href="/assets/website/css/freequantumultxnode/color.css" rel="stylesheet">
    <!-- Responsive -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <!--[if lt IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"></script><![endif]-->
    <!--[if lt IE 9]><script src="js/respond.js"></script><![endif]-->

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="nodejs从异步事件中获取数据方法">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Z4473RL96Y"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Z4473RL96Y');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="page-wrapper">
                <!-- Preloader -->
        <div class="loader-wrap">
            <div class="preloader">
                <div class="preloader-close">Preloader Close</div>
            </div>
            <div class="layer layer-one"><span class="overlay"></span></div>
            <div class="layer layer-two"><span class="overlay"></span></div>
            <div class="layer layer-three"><span class="overlay"></span></div>
        </div>
        <!-- Main Header -->
        <header class="main-header header-style-two">
            <!-- Header Upper -->
            <div class="header-upper style-two">
                <div class="auto-container">
                    <div class="inner-container">
                        <!--Logo-->
                        <div class="logo-box">
                            <div class="logo">
                                <a href="/">
                                                                <span>Free QuantumultX Node</span>
                                                                </a>
                            </div>
                        </div>
                        <div class="right-column">
                            <!--Nav Box-->
                            <div class="nav-outer">
                                <!--Mobile Navigation Toggler-->
                                <div class="mobile-nav-toggler"><img src="/assets/website/img/freequantumultxnode/icons/icon-bar.png" alt=""></div>
                                <!-- Main Menu -->
                                <nav class="main-menu navbar-expand-md navbar-light">
                                    <div class="collapse navbar-collapse show clearfix" id="navbarSupportedContent">
                                        <ul class="navigation">
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                    </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--End Header Upper-->
            <!-- Sticky Header  -->
            <div class="sticky-header main-menu">
                <div class="auto-container">
                    <div class="inner-container">
                        <div class="nav-outer">
                            <!-- Main Menu -->
                            <nav class="main-menu">
                                <!--Keep This Empty / Menu will come through Javascript-->
                            </nav><!-- Main Menu End-->
                            <!-- Main Menu End-->
                        </div>
                    </div>
                </div>
            </div><!-- End Sticky Menu -->
            <!-- Mobile Menu  -->
            <div class="mobile-menu">
                <div class="menu-backdrop"></div>
                <div class="close-btn"><span class="icon flaticon-remove"></span></div>
                <nav class="menu-box">
                    <div class="nav-logo"><a href="/">Free QuantumultX Node</div>
                    <div class="menu-outer">
                        <!--Here Menu Will Come Automatically Via Javascript / Same Menu as in Header-->
                    </div>
                    <!--Social Links-->
                    <div class="social-links">
                        <ul class="clearfix">
                            <li><a href="#"><span class="fab fa-twitter"></span></a></li>
                            <li><a href="#"><span class="fab fa-facebook-square"></span></a></li>
                            <li><a href="#"><span class="fab fa-pinterest-p"></span></a></li>
                            <li><a href="#"><span class="fab fa-instagram"></span></a></li>
                            <li><a href="#"><span class="fab fa-youtube"></span></a></li>
                        </ul>
                    </div>
                </nav>
            </div><!-- End Mobile Menu -->
            <div class="nav-overlay">
                <div class="cursor"></div>
                <div class="cursor-follower"></div>
            </div>
        </header>
        <!-- End Main Header -->
        
        <!-- Page Title -->
        <section class="page-title" style="background-image: url(/assets/website/img/freequantumultxnode/background/bg-3.jpg);">
            <div class="auto-container">
                <div class="content-box">
                    <div class="content-wrapper">
                        <div class="title">
                            <h1>nodejs从异步事件中获取数据方法</h1>
                        </div>
                        <ul class="bread-crumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </section>
        <!-- Page Title -->
        <!-- About Section -->
        <section class="about-section-two py-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="QuantumultX Node(圈X)官方节点站" data-url="https://quantumultxnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <p>nodejs对异步的实现非常彻底，接触时间不久，写爬虫的时候按照以往的思路将request的结果直接赋值给全局变量，结果发现没有输出，对此很困惑，经过查询发现如下</p> <p>看下面的片段，输出为空</p> <p><code>fs.readFile</code>是异步读取，log函数输出是<code>getDate()</code>还没有获取到数据</p> <pre><code class="prism language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">'demo.txt'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span><span class="token comment">//异步事件</span><span class="token keyword">return</span> data<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre> <p>再看看promise实现，log函数仍旧没有输出，和回调函数的问题一样</p> <pre><code class="prism language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"demo.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> result<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre> <p>所以，要想获取异步逻辑的数据，就只能等待异步函数执行完毕得到数据之后在获取，需要延迟获得自然想到了回调函数</p> <p>全局log仍旧无法输出，意味着同步逻辑没有获得异步数据</p> <pre><code class="prism language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span> data<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"demo.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> result<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>     data<span class="token operator">=</span> result<span class="token punctuation">}</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre> <p>再来看看promise</p> <p>利用回调函数无效</p> <p>直接返回promise，表明该结果在未来才能获取，仍旧需要在同步代码中进行回调，显而易见回调仍旧无效</p> <p>async实际上是promise的封装，结果也相同</p> <pre><code class="prism language-js"><span class="token keyword">const</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span> data<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"demo.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token function">callback</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>     data<span class="token operator">=</span> result<span class="token punctuation">}</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//返回promise</span> data<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"demo.txt"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>data<span class="token operator">=</span>res<span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//或者async</span><span class="token keyword">async</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"demo.txt"</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre> <p>或者以订阅发布模式获取，仍旧无效（按理说是可以的）</p> <pre><code class="prism language-js"><span class="token keyword">var</span> events<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'events'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token keyword">var</span> EventEmitter<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">events<span class="token punctuation">.</span>EventEmitter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> data<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">'demo.txt'</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span> 		EventEmitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">'sendData'</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> EventEmitter<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'sendData'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     data<span class="token operator">=</span> res<span class="token punctuation">}</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>以上对nodejs简单的异步代码进行了回顾，可见同步代码和异步代码是两条不同的执行逻辑，之所以同步获取不到异步数据，是由于异步数据的获取时间未知，比起回调函数，强行获取也是不合逻辑的</p> <p>来看看同步方式就完全没有问题</p> <pre><code class="prism language-js"><span class="token keyword">var</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span> data<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">function</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">'demo.txt'</span><span class="token punctuation">)</span><span class="token punctuation">}</span> data<span class="token operator">=</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre> <p>进一步思考，既然同步代码是因为不确定异步数据的时机，还没有获取到就执行完毕了，那让同步代码等待不就行了？</p> <p>然而查找发现nodejs并没有sleep函数的实现，但是可以通过<code>setTimeout</code>进行模拟，将同步逻辑包裹起来</p> <pre><code class="prism language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>     data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>但是这…不还是进入了异步执行的逻辑么</p> <p>所以最终结论是同步代码只能通过回调函数，实现同步异步逻辑交替执行的结果</p> <p>最后如果确定异步逻辑获得了数据，如何强行取出？</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-72944.htm">k8s 部署pod到指定node</a></p>
                                        <p>下一个：<a href="/news/article-73609.htm">济南有宠物领养中心吗在哪里啊（济南宠物领养济南宠物赠送）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-38544.htm" title="学生没钱怎么开网店卖东西赚钱呢（学生没钱怎么开网店卖东西赚钱呢）">学生没钱怎么开网店卖东西赚钱呢（学生没钱怎么开网店卖东西赚钱呢）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-13-free-node-subscribe-links.htm" title="1月13日→19.4M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址">1月13日→19.4M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-72946.htm" title="nodejs从异步事件中获取数据方法">nodejs从异步事件中获取数据方法</a></li>
                        <li class="py-2"><a href="/news/article-67092.htm" title="Vue学习笔记v-for的key">Vue学习笔记v-for的key</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-21-latest-quantumult-x-node.htm" title="2月21日→19.3M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址">2月21日→19.3M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-41508.htm" title="动物防疫站可以打疫苗（动物防疫站打疫苗通知怎么写）">动物防疫站可以打疫苗（动物防疫站打疫苗通知怎么写）</a></li>
                        <li class="py-2"><a href="/news/article-69013.htm" title="vscode eslint插件对vue文件无效">vscode eslint插件对vue文件无效</a></li>
                        <li class="py-2"><a href="/news/article-40033.htm" title="动物医院有公立的吗还是私立的好（动物医院有公立的吗还是私立的好一点）">动物医院有公立的吗还是私立的好（动物医院有公立的吗还是私立的好一点）</a></li>
                        <li class="py-2"><a href="/news/article-54748.htm" title="动物预防接种计划表（动物预防接种实验报告）">动物预防接种计划表（动物预防接种实验报告）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-9-free-node-subscribe.htm" title="1月9日→18.1M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址">1月9日→18.1M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">42</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!-- Main Footer -->
                <!-- Main Footer -->
        <footer class="main-footer">
            <div class="footer-bottom">
                <div class="auto-container">
                    <div class="copyright">
                        <div class="text">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">Free QuantumultX Node(圈X)免费机场节点订阅官网</a> 版权所有
                            <br />
                            Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!--Scroll to top-->
        <div class="scroll-to-top scroll-to-target" data-target="html"><span class="flaticon-right-arrow"></span></div>
        <script src="/assets/website/js/frontend/freequantumultxnode/jquery.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/popper.min.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/bootstrap-select.min.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/jquery.fancybox.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/isotope.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/owl.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/appear.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/wow.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/lazyload.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/scrollbar.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/TweenMax.min.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/swiper.min.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/script.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!--End pagewrapper-->
    
</body>

</html>