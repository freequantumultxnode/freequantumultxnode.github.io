<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freequantumultxnode.github.io/news/article-79718.htm" />
    <meta charset="utf-8">
    <title>Springboot + MDC + traceId日志中打印唯一traceId</title>
        <meta name="description" content="先看一张图：有同学问：日志中[]中类似uuid的这个traceId是怎么实现的，这边文章就介绍下如何在springboot工程下用MDC实现日志文件中打印traceId。 1. 为什么需要这个trac" />
        <link rel="icon" href="/assets/website/img/freequantumultxnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free QuantumultX Node(圈X)免费机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freequantumultxnode.github.io/news/article-79718.htm" />
    <meta property="og:site_name" content="Free QuantumultX Node(圈X)免费机场节点订阅官网" />
    <meta property="og:title" content="Springboot + MDC + traceId日志中打印唯一traceId" />
    <meta property="og:image" content="https://freequantumultxnode.github.io/uploads/20240913-1/218db4a996897c968673ce91151d73fc.webp" />
        <meta property="og:release_date" content="2025-03-23T08:23:24" />
    <meta property="og:updated_time" content="2025-03-23T08:23:24" />
        <meta property="og:description" content="先看一张图：有同学问：日志中[]中类似uuid的这个traceId是怎么实现的，这边文章就介绍下如何在springboot工程下用MDC实现日志文件中打印traceId。 1. 为什么需要这个trac" />
        
    <!-- Stylesheets -->
    <link href="/assets/website/css/freequantumultxnode/bootstrap.css" rel="stylesheet">
    <link href="/assets/website/css/freequantumultxnode/style.css" rel="stylesheet">
    <!-- Responsive File -->
    <link href="/assets/website/css/freequantumultxnode/responsive.css" rel="stylesheet">
    <!-- Color File -->
    <link href="/assets/website/css/freequantumultxnode/color.css" rel="stylesheet">
    <!-- Responsive -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <!--[if lt IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.js"></script><![endif]-->
    <!--[if lt IE 9]><script src="js/respond.js"></script><![endif]-->

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Springboot + MDC + traceId日志中打印唯一traceId">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Z4473RL96Y"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Z4473RL96Y');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div class="page-wrapper">
                <!-- Preloader -->
        <div class="loader-wrap">
            <div class="preloader">
                <div class="preloader-close">Preloader Close</div>
            </div>
            <div class="layer layer-one"><span class="overlay"></span></div>
            <div class="layer layer-two"><span class="overlay"></span></div>
            <div class="layer layer-three"><span class="overlay"></span></div>
        </div>
        <!-- Main Header -->
        <header class="main-header header-style-two">
            <!-- Header Upper -->
            <div class="header-upper style-two">
                <div class="auto-container">
                    <div class="inner-container">
                        <!--Logo-->
                        <div class="logo-box">
                            <div class="logo">
                                <a href="/">
                                                                <span>Free QuantumultX Node</span>
                                                                </a>
                            </div>
                        </div>
                        <div class="right-column">
                            <!--Nav Box-->
                            <div class="nav-outer">
                                <!--Mobile Navigation Toggler-->
                                <div class="mobile-nav-toggler"><img src="/assets/website/img/freequantumultxnode/icons/icon-bar.png" alt=""></div>
                                <!-- Main Menu -->
                                <nav class="main-menu navbar-expand-md navbar-light">
                                    <div class="collapse navbar-collapse show clearfix" id="navbarSupportedContent">
                                        <ul class="navigation">
                                                                                        <li><a href="/">首页</a></li>
                                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                                    </ul>
                                    </div>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--End Header Upper-->
            <!-- Sticky Header  -->
            <div class="sticky-header main-menu">
                <div class="auto-container">
                    <div class="inner-container">
                        <div class="nav-outer">
                            <!-- Main Menu -->
                            <nav class="main-menu">
                                <!--Keep This Empty / Menu will come through Javascript-->
                            </nav><!-- Main Menu End-->
                            <!-- Main Menu End-->
                        </div>
                    </div>
                </div>
            </div><!-- End Sticky Menu -->
            <!-- Mobile Menu  -->
            <div class="mobile-menu">
                <div class="menu-backdrop"></div>
                <div class="close-btn"><span class="icon flaticon-remove"></span></div>
                <nav class="menu-box">
                    <div class="nav-logo"><a href="/">Free QuantumultX Node</div>
                    <div class="menu-outer">
                        <!--Here Menu Will Come Automatically Via Javascript / Same Menu as in Header-->
                    </div>
                    <!--Social Links-->
                    <div class="social-links">
                        <ul class="clearfix">
                            <li><a href="#"><span class="fab fa-twitter"></span></a></li>
                            <li><a href="#"><span class="fab fa-facebook-square"></span></a></li>
                            <li><a href="#"><span class="fab fa-pinterest-p"></span></a></li>
                            <li><a href="#"><span class="fab fa-instagram"></span></a></li>
                            <li><a href="#"><span class="fab fa-youtube"></span></a></li>
                        </ul>
                    </div>
                </nav>
            </div><!-- End Mobile Menu -->
            <div class="nav-overlay">
                <div class="cursor"></div>
                <div class="cursor-follower"></div>
            </div>
        </header>
        <!-- End Main Header -->
        
        <!-- Page Title -->
        <section class="page-title" style="background-image: url(/assets/website/img/freequantumultxnode/background/bg-3.jpg);">
            <div class="auto-container">
                <div class="content-box">
                    <div class="content-wrapper">
                        <div class="title">
                            <h1>Springboot + MDC + traceId日志中打印唯一traceId</h1>
                        </div>
                        <ul class="bread-crumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/news/">新闻资讯</a></li>
                            <li>正文</li>
                        </ul>
                    </div>
                </div>
            </div>
        </section>
        <!-- Page Title -->
        <!-- About Section -->
        <section class="about-section-two py-5">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="QuantumultX Node(圈X)官方节点站" data-url="https://quantumultxnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>先看一张图：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230118/9b82d81521240018e745e8f52ae76305.jpg" alt="Springboot + MDC + traceId日志中打印唯一traceId">有同学问：日志中[]中类似uuid的这个traceId是怎么实现的，这边文章就介绍下如何在springboot工程下用MDC实现日志文件中打印traceId。</p> <p><strong>1. 为什么需要这个traceId</strong><br /> 我们在定位问题的时候需要去日志中查找对应的位置，当我们一个接口的请求同用唯一的一个traceId，那我们只需要知道这个traceId，使用 grep ‘traceId’ xxx.log 语句就能准确的定位到目标日志。在这边文章会介绍如何去设置这个traceId，而后如何在接口返回这个traceId。</p> <pre><code class="prism language-csharp"><span class="token preprocessor property">#接口返回：</span> <span class="token punctuation">{<!-- --></span>     <span class="token string">"code"</span><span class="token punctuation">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span>     <span class="token string">"dealStatus"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span>     <span class="token string">"TRACE_ID"</span><span class="token punctuation">:</span> <span class="token string">"a10e6e8d-9953-4de9-b145-32eee6aa5562"</span> <span class="token punctuation">}</span> <span class="token preprocessor property">#查询日志</span>  grep <span class="token string">'a10e6e8d-9953-4de9-b145-32eee6aa5562'</span> xxxx<span class="token punctuation">.</span>log </code></pre> <p><strong>2.通过MDC设置traceId</strong><br /> 笔者目前遇到的项目，可以有三种情况去设置traceId。先简单的介绍MDC</p> <pre><code class="prism language-csharp"> <span class="token preprocessor property">#MDC定义</span>  <span class="token class-name">Mapped</span> <span class="token class-name">Diagnostic</span> Context，即：映射诊断环境。  MDC是 log4j 和 logback 提供的一种方便在多线程条件下记录日志的功能。  MDC 可以看成是一个与当前线程绑定的哈希表，可以往其中添加键值对。  <span class="token preprocessor property">#MDC的使用方法</span>  向MDC中设置值：MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  从MDC中取值：MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>  将MDC中内容打印到日志中：<span class="token operator">%</span>X<span class="token punctuation">{<!-- --></span>key<span class="token punctuation">}</span> </code></pre> <p>2.1 使用filter过滤器设置traceId<br /> 新建一个过滤器，实现Filter，重写init，doFilter，destroy方法，设置traceId放在doFilter中，在destroy中调用MDC.clear()方法。</p> <pre><code class="prism language-csharp">@Slf4j @<span class="token function">WebFilter</span><span class="token punctuation">(</span>filterName <span class="token operator">=</span> <span class="token string">"traceIdFilter"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/*"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">class</span> traceIdFilter implements Filter <span class="token punctuation">{<!-- --></span>  	<span class="token comment">/**      * 日志跟踪标识      */</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> TRACE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>          @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> throws ServletException <span class="token punctuation">{<!-- --></span>     <span class="token punctuation">}</span>      @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> servletRequest<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> servletResponse<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span>             throws IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     	MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>   </code></pre> <p>2.2 使用JWT token过滤器的项目<br /> springboot项目经常使用spring security+jwt来做权限限制，在这种情况下，我们通过新建filter过滤器来设置traceId，那么在验证token这部分的日志就不会带上traceId，因此我们需要把代码放在jwtFilter中，如图：</p> <pre><code class="prism language-csharp"><span class="token comment">/**  * token过滤器 验证token有效性  *  * @author china  */</span> @<span class="token class-name">Component</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtAuthenticationTokenFilter</span> extends OncePerRequestFilter <span class="token punctuation">{<!-- --></span>     @<span class="token class-name">Autowired</span>     <span class="token keyword">private</span> <span class="token class-name">TokenService</span> tokenService<span class="token punctuation">;</span>      <span class="token comment">/**      * 日志跟踪标识      */</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> TRACE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>      @<span class="token class-name">Override</span>     <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span>             throws ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">LoginUser</span> loginUser <span class="token operator">=</span> tokenService<span class="token punctuation">.</span><span class="token function">getLoginUser</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> StringUtils<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>SecurityUtils<span class="token punctuation">.</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             tokenService<span class="token punctuation">.</span><span class="token function">verifyToken</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">UsernamePasswordAuthenticationToken</span> authenticationToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>loginUser<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loginUser<span class="token punctuation">.</span><span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             authenticationToken<span class="token punctuation">.</span><span class="token function">setDetails</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebAuthenticationDetailsSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">buildDetails</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             SecurityContextHolder<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span>authenticationToken<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>          @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>2.3 使用Interceptor拦截器设置traceId<br /> 定义一个拦截器，重写preHandle方法，在方法中通过MDC设置traceId</p> <pre><code class="prism language-csharp"><span class="token comment">/**  * MDC设置traceId拦截器  *  * @author china  */</span> @<span class="token class-name">Component</span> <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">TraceIdInterceptor</span> extends HandlerInterceptorAdapter <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> UNIQUE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>      @<span class="token class-name">Override</span>     <span class="token keyword">public</span> boolean <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>UNIQUE_ID<span class="token punctuation">,</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token keyword">true</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  	@<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> @<span class="token class-name">Nullable</span> <span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> throws Exception <span class="token punctuation">{<!-- --></span>         MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <p><strong>3.logback.xml中配置traceId</strong> <br /> 与之前的相比只是添加了[%X{TRACE_ID}]， [%X{***}]是一个模板，中间属性名是我们使用MDC put进去的。</p> <pre><code class="prism language-csharp"><span class="token preprocessor property">#之前</span> <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.pattern"</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token string">"%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - %msg%n"</span> <span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token preprocessor property">#增加traceId后</span> <span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"log.pattern"</span> <span class="token keyword">value</span><span class="token operator">=</span><span class="token string">"%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{20} - [%method,%line] - [%X{TRACE_ID}] - %msg%n"</span> <span class="token operator">/</span><span class="token operator">&gt;</span> </code></pre> <p><strong>4.补充异步方法带入上下文的traceId</strong><br /> 异步方法会开启一个新线程，我们想要是异步方法和主线程共用同一个traceId，首先先新建一个任务适配器MdcTaskDecorator，如图：</p> <pre><code class="prism language-csharp"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MdcTaskDecorator</span> implements TaskDecorator      <span class="token comment">/**      * 使异步线程池获得主线程的上下文      * @param runnable      * @return      */</span>     @<span class="token class-name">Override</span>     <span class="token keyword">public</span> <span class="token class-name">Runnable</span> <span class="token function">decorate</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> runnable<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>String<span class="token operator">&gt;</span> map <span class="token operator">=</span> MDC<span class="token punctuation">.</span><span class="token function">getCopyOfContextMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">try</span><span class="token punctuation">{<!-- --></span>                 MDC<span class="token punctuation">.</span><span class="token function">setContextMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>                 runnable<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>                 MDC<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>  </code></pre> <p>然后，在线程池配置中增加executor.setTaskDecorator(new MdcTaskDecorator())的设置</p> <pre><code class="prism language-csharp"> <span class="token comment">/**  * 线程池配置  *  * @author china  **/</span> @EnableAsync @<span class="token class-name">Configuration</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPoolConfig</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> keepAliveSeconds <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>      @<span class="token function">Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"threadPoolTaskExecutor"</span><span class="token punctuation">)</span>     <span class="token keyword">public</span> <span class="token class-name">ThreadPoolTaskExecutor</span> <span class="token function">threadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token class-name">ThreadPoolTaskExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setMaxPoolSize</span><span class="token punctuation">(</span>maxPoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setCorePoolSize</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setQueueCapacity</span><span class="token punctuation">(</span>queueCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setKeepAliveSeconds</span><span class="token punctuation">(</span>keepAliveSeconds<span class="token punctuation">)</span><span class="token punctuation">;</span>         executor<span class="token punctuation">.</span><span class="token function">setTaskDecorator</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MdcTaskDecorator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 线程池对拒绝任务(无线程可用)的处理策略</span>         executor<span class="token punctuation">.</span><span class="token function">setRejectedExecutionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> executor<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>最后，在业务代码上使用@Async开启异步方法即可</p> <pre><code class="prism language-csharp">    @<span class="token function">Async</span><span class="token punctuation">(</span><span class="token string">"threadPoolTaskExecutor"</span><span class="token punctuation">)</span>     <span class="token keyword">void</span> <span class="token function">testSyncMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p><strong>5.在接口放回中，增加traceId返回</strong><br /> 在笔者项目中，接口返回都使用了一个叫AjaxResult自定义类来包装，所以只需要把这个类的构造器中增加traceId返回即可，相对简单。</p> <pre><code class="prism language-csharp">   <span class="token comment">/**      * 日志跟踪标识      */</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> final <span class="token class-name">String</span> TRACE_ID <span class="token operator">=</span> <span class="token string">"TRACE_ID"</span><span class="token punctuation">;</span>          <span class="token comment">/**      * 初始化一个新创建的 AjaxResult 对象，使其表示一个空消息。      */</span>     <span class="token keyword">public</span> <span class="token function">AjaxResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 初始化一个新创建的 AjaxResult 对象      *      * @param code 状态码      * @param msg  返回内容      */</span>     <span class="token keyword">public</span> <span class="token function">AjaxResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>CODE_TAG<span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>MSG_TAG<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token comment">/**      * 初始化一个新创建的 AjaxResult 对象      *      * @param code 状态码      * @param msg  返回内容      * @param data 数据对象      */</span>     <span class="token keyword">public</span> <span class="token function">AjaxResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> msg<span class="token punctuation">,</span> <span class="token class-name">Object</span> data<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>CODE_TAG<span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>MSG_TAG<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>         super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">,</span> MDC<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>TRACE_ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             super<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>DATA_TAG<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-79039.htm">宠物医院收费价目表昆明（昆明宠物医院24小时营业）</a></p>
                                        <p>下一个：<a href="/news/article-79719.htm">宠物打完疫苗观察多久（宠物打完疫苗观察多久出结果）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-2-13-quantumult-x-github.htm" title="2月13日→19.7M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址">2月13日→19.7M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-3-latest-quantumult-x-node.htm" title="2月3日→20.6M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址">2月3日→20.6M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-70966.htm" title="动物医院资质查询系统官网（动物医院介绍）">动物医院资质查询系统官网（动物医院介绍）</a></li>
                        <li class="py-2"><a href="/news/article-39558.htm" title="动物医院需要什么设备呢图片高清（动物医院的工作流程及要点）">动物医院需要什么设备呢图片高清（动物医院的工作流程及要点）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-22-free-high-speed-nodes.htm" title="3月22日→21.5M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址">3月22日→21.5M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-38544.htm" title="学生没钱怎么开网店卖东西赚钱呢（学生没钱怎么开网店卖东西赚钱呢）">学生没钱怎么开网店卖东西赚钱呢（学生没钱怎么开网店卖东西赚钱呢）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-17-latest-quantumult-x-node.htm" title="2月17日→20.5M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址">2月17日→20.5M/S|2025年最新免费节点Free QuantumultX Node(圈X)订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-63365.htm" title="广州有领养宠物猫的地方吗? 广州有领养宠物猫的地方吗在哪里">广州有领养宠物猫的地方吗? 广州有领养宠物猫的地方吗在哪里</a></li>
                        <li class="py-2"><a href="/news/article-75630.htm" title="python中的time库安装步骤-python中time库的实例使用方法">python中的time库安装步骤-python中time库的实例使用方法</a></li>
                        <li class="py-2"><a href="/news/article-57533.htm" title="宠物领养系统功能模块（宠物领养系统功能模块有哪些）">宠物领养系统功能模块（宠物领养系统功能模块有哪些）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">69</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!-- Main Footer -->
                <!-- Main Footer -->
        <footer class="main-footer">
            <div class="footer-bottom">
                <div class="auto-container">
                    <div class="copyright">
                        <div class="text">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">Free QuantumultX Node(圈X)免费机场节点订阅官网</a> 版权所有
                            <br />
                            Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!--Scroll to top-->
        <div class="scroll-to-top scroll-to-target" data-target="html"><span class="flaticon-right-arrow"></span></div>
        <script src="/assets/website/js/frontend/freequantumultxnode/jquery.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/popper.min.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/bootstrap-select.min.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/jquery.fancybox.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/isotope.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/owl.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/appear.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/wow.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/lazyload.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/scrollbar.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/TweenMax.min.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/swiper.min.js"></script>
        <script src="/assets/website/js/frontend/freequantumultxnode/script.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
    <!--End pagewrapper-->
    
</body>

</html>